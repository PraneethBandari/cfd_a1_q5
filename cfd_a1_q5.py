# -*- coding: utf-8 -*-
"""cfd_a1_q5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n-eAHNhVVhV0MX4rwuZZc6QRYI8nHHIT
"""

import pandas as np
import matplotlib.pyplot as plt

nodescase1_1=[]
Temperaturecase1_1=[]
with open('fdmq5case1sol.txt', 'r') as f:
    for line in f:
        row = line.strip().split(':')
        if len(row) == 2:
            try:
                nodescase1_1.append(int(row[0]))
                Temperaturecase1_1.append(float(row[1]))
            except ValueError:
                print(f"Error converting line to numbers: {line}")
        else:
            print(f"Invalid line format: {line}")

nodescase1_2 = []
Temperaturecase1_2 = []

# Read data from the second file
with open('fdmq5case1analyticalsol.txt', 'r') as f:
    for line in f:
        row = line.strip().split(':')
        if len(row) == 2:
            try:
                nodescase1_2.append(int(row[0]))
                Temperaturecase1_2.append(float(row[1]))
            except ValueError:
                print(f"Error converting line to numbers in fdmq2analyticalsol.txt: {line}")
        else:
            print(f"Invalid line format in fdmq2analyticalsol.txt: {line}")

if nodes and Temperature:
    # Create the plot
    plt.figure(figsize=(10, 6))  # Optional: adjust figure size
    plt.plot(nodescase1_1, Temperaturecase1_1, marker='o', linestyle='-', color='b', label='Temperature vs Nodes')
    plt.plot(nodescase1_2, Temperaturecase1_2, marker='s', linestyle=':', color='g', label='Temperature vs Nodes(analytical)')

    # Add labels and title
    plt.xlabel('Nodes', fontsize=12)
    plt.ylabel('Temperature (°C)', fontsize=12)
    plt.title('Temperature vs Nodes case1', fontsize=16)
    plt.grid(True)
    plt.legend()

    # Show the plot
    plt.show()
else:
    print("No data to plot.")

nodescase2_1=[]
Temperaturecase2_1=[]
with open('fdmq5case2sol.txt', 'r') as f:
    for line in f:
        row = line.strip().split(':')
        if len(row) == 2:
            try:
                nodescase2_1.append(int(row[0]))
                Temperaturecase2_1.append(float(row[1]))
            except ValueError:
                print(f"Error converting line to numbers: {line}")
        else:
            print(f"Invalid line format: {line}")

nodescase2_2 = []
Temperaturecase2_2 = []

# Read data from the second file
with open('fdmq5case2analyticalsol.txt', 'r') as f:
    for line in f:
        row = line.strip().split(':')
        if len(row) == 2:
            try:
                nodescase2_2.append(int(row[0]))
                Temperaturecase2_2.append(float(row[1]))
            except ValueError:
                print(f"Error converting line to numbers in fdmq2analyticalsol.txt: {line}")
        else:
            print(f"Invalid line format in fdmq2analyticalsol.txt: {line}")

if nodes and Temperature:
    # Create the plot
    plt.figure(figsize=(10, 6))  # Optional: adjust figure size
    plt.plot(nodescase2_1, Temperaturecase2_1, marker='o', linestyle='-', color='b', label='Temperature vs Nodes')
    plt.plot(nodescase2_2, Temperaturecase2_2, marker='s', linestyle=':', color='g', label='Temperature vs Nodes(analytical)')

    # Add labels and title
    plt.xlabel('Nodes', fontsize=12)
    plt.ylabel('Temperature (°C)', fontsize=12)
    plt.title('Temperature vs Nodes case1', fontsize=16)
    plt.grid(True)
    plt.legend()

    # Show the plot
    plt.show()
else:
    print("No data to plot.")